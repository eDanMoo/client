name: Front_deploy
on:
  push:
    branches: [ main ]
env:
  VERSION: ${{ github.sha }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
  
permissions:
  contents: read
  actions: read
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: create remote directory
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.PRIVATE_KEY }}
      #     script: mkdir -p /home/${{ secrets.SERVER_USER }}/srv/${{ secrets.SERVER_USER }}

      # - name: copy source via ssh key
      #   uses: burnett01/rsync-deployments@4.1
      #   with:
      #     switches: -avzr --delete
      #     remote_path: /home/${{ secrets.SERVER_USER }}/srv/${{ secrets.SERVER_USER }}/
      #     remote_host: ${{ secrets.HOST }}
      #     remote_user: ${{ secrets.SERVER_USER }}
      #     remote_key: ${{ secrets.PRIVATE_KEY }}

      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Cache docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: build and push front image to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_FRONT_REPO }}:latest
          cache-from: type:gha                         # gha는 github action용 캐시 의미       
          cache-to: type=gha,mode=max

      - name: build and push Webserver image to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: ./config/nginx/
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_FRONT_WEBSERVER_REPO }}:latest
          cache-from: type:gha                         # gha는 github action용 캐시 의미       
          cache-to: type=gha,mode=max
          
  deploy:
    needs: build  # build 후에 실행되도록 정의
    name: Deploy
    runs-on: [ self-hosted, label-go ]
    steps:
      - name: create remote directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: mkdir -p /home/${{ secrets.SERVER_USER }}/config/${{ secrets.DOCKERHUB_FRONT_WEBSERVER_REPO }}

      - uses: actions/checkout@v3

      - name: copy docker-compose.yml
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          source: "./docker-compose.yml"
          target: "/home/${{ secrets.SERVER_USER }}"

      # - name: copy webserver dockerfile
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.PRIVATE_KEY }}
      #     port: ${{ secrets.PORT }}
      #     source: "./config/nginx/"
      #     target: "/home/${{ secrets.SERVER_USER }}/config/{{ secrets.DOCKERHUB_FRONT_WEBSERVER_REPO }}"


      - name: Login to DockerHub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            docker pull hunkicho/jg_front_vue:latest && docker run -it -v /home/${{ secrets.SERVER_USER }}/logs:/var/log/nginx vue_app

      - name: Slack notification
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          # SLACK_USERNAME: ThisIsMyUsername # Optional. (defaults to webhook app)
          # SLACK_CHANNEL: general # Optional. (defaults to webhook)
          # SLACK_AVATAR: repository # Optional. can be (repository, sender, an URL) (defaults to webhook app avatar)
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Github Action Test # default: 8398a7@action-slack
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
    

